.TH qthread_prepare 3 "NOVEMBER 2006" libqthread "libqthread"
.SH NAME
\fBqthread_prepare\fR, \fBqthread_prepare_for\fR \- create an unscheduled qthread
.SH SYNOPSIS
.B #include <qthread/qthread.h>

.I qthread_t *
.br
\fBqthread_prepare\fR(qthread_f *\fIf\fR, const void *\fIarg\fR, aligned_t *\fIret\fR);
.PP
.I qthread_t *
.br
\fBqthread_prepare_for\fR(qthread_f *\fIf\fR, const void *\fIarg\fR, aligned_t *\fIret\fR,
.ti +20n
const qthread_shepherd_id_t \fIshepherd\fR);
.SH DESCRIPTION
These are functions for preparing new qthreads, but not actually scheduling
them.
.PP
The first argument to these functions, \fIf\fR, is a function that will be run
to completion by the created qthread. (Note that \fIf\fR is a qthread_f and not
a qthread_t.) The second argument to these functions, \fIarg\fR, is an argument
that will be passed to the specified function. Finally, \fIret\fR is a pointer to the location that the return value of \fIf\fR will be placed into.
.PP
The qthread_f function must have a prototype like this:
.RS
.PP
aligned_t function(qthread_t *me, void *arg);
.RE
.PP
The \fBqthread_prepare_for\fR() function prepares the qthread for the specified
shepherd.
.PP
When a qthread_t is returned, it is not scheduled to run, and must be passed to
either \fBqthread_schedule\fR() or \fBqthread_schedule_on\fR().
.PP
The return value of the function \fIf\fR will be placed into the memory pointed
to by \fIret\fR, in accordance with the full-empty bits. When
\fBqthread_fork\fR() or \fBqthread_fork_to\fR() is called, \fIret\fR will be
emptied (as if it had been passed to \fBqthread_empty\fR()). When the function
\fIf\fR returns, the returned value will be stored into \fIret\fR and \fIret\fR
will be filled. The way to block until a function has finished is to use
\fBqthread_readFF\fR() on the \fIret\fR pointer.
.SH RETURN VALUE
These functions all return pointers to a qthread_t structure, which is a handle
to the qthread that was just prepared. On error, NULL is returned.
.SH SEE ALSO
.BR qthread_fork (3),
.BR qthread_fork_for (3),
.BR qthread_schedule (3),
.BR qthread_schedule_on (3)
