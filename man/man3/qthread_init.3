.TH qthread_init 3 "NOVEMBER 2006" libqthread "libqthread"
.SH NAME
.B qthread_init
\- initialize the qthread library
.SH SYNOPSIS
.B #include <qthread/qthread.h>

.I int
.br
.B qthread_init
.RI "(const int " nshepherds );
.SH DESCRIPTION
Use this function to initialize the qthreads environment before spawning any
qthreads or using any of the qthreads locking/FEB functions. The number of
shepherd pthreads that will execute qthreads is specified with
.IR nshepherds .
If
.I nshepherds
is 0, the library will attempt to guess the correct number of shepherds,
defaulting to a single shepherd if no information about the system could be
found. Shepherds will attempt to pin themselves to processors using whatever
CPU affinity libraries are available.
.SH ENVIRONMENT
The operation of
.BR qthread_init ()
is modified by the following environment variables:
.TP 4
.B QTHREAD_AFFINITY
If this variable is set to "no", then the shepherds will not pin themselves to
specific locations.
.TP
.B QTHREAD_DEBUG_LEVEL
This variable is used to control the verbosity of debug messages that get
printed at runtime. Higher numbers increase the verbosity; a value of 0 is the
same as being unset, which prevents debug messages from being printed. This is
only applicable if debugging has been enabled when the library was built.
.TP
.B QTHREAD_STACK_SIZE
This variable adjusts the size of the stacks that will be created for each
thread. Changes to this value during the course of the program run are ignored;
the value is only considered when
.BR qthread_init ()
is run.
.SH RETURN VALUE
On success, the system is ready to fork threads and 0 is returned. On error, an
non-zero error code is returned.
.SH ERRORS
.TP 12
.B ENOMEM
Not enough memory could be allocated.
.SH SEE ALSO
.BR qthread_finalize (3)
