.TH future_init 3 "NOVEMBER 2006" libqthread "libqthread"
.SH NAME
\fBfuture_init\fR \- initialize the future library
.SH SYNOPSIS
.B #include <qthread/futurelib.h>

.I void
.br
\fBfuture_init\fR(qthread_t *\fIme\fR, int \fIvp_per_loc\fR, int \fIloc_count\fR);
.PP

.SH DESCRIPTION
Initializes the futurelib environment so that threads may create
future computations.
.PP
The first argument is a pointer to the qthread initializing the library.
Futurelib runs in the context of qthreads, and so requires a qthread
to have been created in order that synchronization functions may be
used. 
.PP
The second argument, \fIvp_per_loc\fR, specifies how many
futures may be active on each location. This does not include qthreads
which were not created as futures since futurelib is not aware of how
many of these exists. Active threads include all created futures which
are currently running and have not explicitly yielded. Inactive futures
are not limited, as this could easily lead to deadlock.
.PP
The last argument, \fIloc_count\fR, describes how many
qthread locations exists. This should be the same number which
was passed to \fBqthread_init\fR().
.PP
.SH "SEE ALSO"
.BR future_join_all (3),
.BR future_init (3),
.BR future_exit (3),
.BR future_yield (3),
.BR future_acquire (3)
