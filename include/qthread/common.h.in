/*  -*- Mode: C -*-
 * ------------------------------------------------------------------
 * DO NOT EDIT THIS FILE!  It has been automatically generated.
 * ------------------------------------------------------------------
 */

#ifndef QTHREAD_COMMON_H
#define QTHREAD_COMMON_H

/* Whether the compiler supports the attribute aligned property */
#undef HAVE_ATTRIBUTE_ALIGNED

/* Whether C compiler supports GCC style inline assembly */
#undef HAVE_GCC_INLINE_ASSEMBLY

/* Architecture type of assembly to use */
#undef QTHREAD_ASSEMBLY_ARCH

/* use mutexes when incrementing, rather than architecture-specific assembly
   */
#undef QTHREAD_MUTEX_INCREMENT

/* use inlined functions */
#undef QTHREAD_INLINE

/* Allow functions to be inlined */
#undef QINLINE

/* compile for the SST */
#undef SST

/* alignment of aligned_t */
#undef QTHREAD_ALIGNMENT_ALIGNED_T

/* size of aligned_t */
#undef QTHREAD_SIZEOF_ALIGNED_T

/* builtins supported */
#undef QTHREAD_ATOMIC_BUILTINS

/* builtin cas supported */
#undef QTHREAD_ATOMIC_CAS

/* if the compiler supports __sync_val_compare_and_swap on 32-bit ints */
#undef QTHREAD_ATOMIC_CAS32

/* if the compiler supports __sync_val_compare_and_swap on 64-bit ints */
#undef QTHREAD_ATOMIC_CAS64

/* if the compiler supports __sync_val_compare_and_swap on pointers */
#undef QTHREAD_ATOMIC_CAS_PTR

/* builtin incr supported */
#undef QTHREAD_ATOMIC_INCR

/* ia64intrin.h available */
#undef HAVE_IA64INTRIN_H

/* if ia64intrin is needed */
#undef QTHREAD_NEEDS_IA64INTRIN

/* specifying data alignment is allowed */
#undef QTHREAD_ALIGNEDDATA_ALLOWED

/* if the compiler supports __attribute__((malloc)) */
#undef Q_MALLOC

/* if the compiler supports __attribute__((unused)) */
#undef Q_UNUSED

/* Define to the equivalent of the C99 'restrict' keyword, or to
   nothing if this is not supported.  Do not define if restrict is
   supported directly.  */
#undef restrict
/* Work around a bug in Sun C++: it does not support _Restrict, even
   though the corresponding Sun C compiler does, which causes
   "#define restrict _Restrict" in the previous line.  Perhaps some future
   version of Sun C++ will work with _Restrict; if so, it'll probably
   define __RESTRICT, just as Sun C does.  */
#if defined __SUNPRO_CC && !defined __RESTRICT
# define _Restrict
#endif

/* Bytes per cache line */
#undef QTHREAD_CACHELINE_BYTES

/* Architecture defines */
#define QTHREAD_UNSUPPORTED 0
#define QTHREAD_IA32        1
#define QTHREAD_AMD64       2
#define QTHREAD_IA64        3
#define QTHREAD_ALPHA       4
#define QTHREAD_MIPS        5
#define QTHREAD_POWERPC32   6
#define QTHREAD_POWERPC64   7
#define QTHREAD_SPARCV9_32  8
#define QTHREAD_SPARCV9_64  9

#endif
