# Release Candidate 1.10:

- Unify the multithreaded shepherd and single-threaded shepherd code paths.

- Refactor topology and affinity support.

- Make eureka support a configuration option; mark as _experimental_ until race conditions are cleaned up.

- Remove defunct SST support.

- Remove futurelib.

Tentative release date: Sep 2013.

# General things to do (in no particular order):

- Periodic task system

- Direct thread swapping, esp. for sinc's or other synchronization operations where the next thread to execute is obvious.

- Qthreads with in/out vectors for cross-node workstealing

- Cross-node synchronization (i.e. fill remote FEB)

- Hierarchical shepherds (need to rename shepherds)

- 128-bit syncvars

- Change the futurelib spawner to use up existing concurrency limits before blocking

- Add a qthread_replace(me, func, arg, argsize) function to enable convenient tail-recursion algorithms

- Make futurelib limits dynamic

- Rework futures to use preallocated contexts

- Rework most qutil/qloop functions to deal with deactivated shepherds

- Continuation passing (put a "spawn_to" in the precondition record)...

- Coalesce system calls (is this a good idea?)

- Implement MAMA malloc?

- Use LockBox mutexes on BlueGene/P

# General things to think about:

- Non-executing shepherds to allow for memory locales without associated computing resources.

- Port to XMT (is this even possible???)
