.TH qarray_iter 3 "MAY 2009" libqthread "libqthread"
.SH NAME
\fBqarray_iter\fR \- iterate through a distributed array
.SH SYNOPSIS
.B #include <qthread/qarray.h>

.I void
.br
\fBqarray_iter\fR(qthread_t * \fIme\fR,
qarray * \fIa\fR,
const size_t \fIstartat\fR,
.br
.ti +12
const size_t \fIstopat\fR,
qthread_f \fIfunc\fR);
.PP
.I void
.br
\fBqarray_iter_loop\fR(qthread_t * \fIme\fR,
qarray * \fIa\fR,
const size_t \fIstartat\fR,
.br
.ti +17
const size_t \fIstopat\fR,
qa_loop_f \fIfunc\fR,
.br
.ti +17
void * \fIarg\fR);
.PP
.I void
.br
\fBqarray_iter_constloop\fR(qthread_t * \fIme\fR,
qarray * \fIa\fR,
const size_t \fIstartat\fR,
.br
.ti +22
const size_t \fIstopat\fR,
qa_loop_f \fIfunc\fR,
.br
.ti +22
void * \fIarg\fR);
.SH DESCRIPTION
These functions iterate efficiently over the distributed arrays. The most basic
and naive of the set is \fBqarray_iter\fR(), which applies the \fIfunc\fR
function to each element in the array, guaranteeing that the function will be
executed near the specified data. The \fIfunc\fR function is a basic qthread
function, of the following form:
.RS
.PP
void \fIfunc\fR(qthread_t *me, void *arg);
.RE
.PP
The \fIarg\fR argument to the \fIfunc\fR function is a pointer to an array
element.
.PP
The \fBqarray_iter_loop\fR and \fBqarray_iter_constloop\fR functions are more
powerful iteration functions. They are identical to each other, except that the
\fBqarray_iter_constloop\fR function forbids modifying the input qarray. Both
functions iterate over a range of values within the qarray, which is defined by
the \fIstartat\fR and \fIstopat\fR arguments. The \fIfunc\fR argument is
expected to be a function of the following form:
.RS
.PP
void \fIfunc\fR(qthread_t *me, const size_t startat, const size_t stopat, qarray *array, void *arg)
.br
{
.RS
size_t i;
.br
for (i = \fIstartat\fR; i < \fIstopat\fR; i ++) {
.RS
/* do work */
.RE
}
.RE
}
.RE
.PP
The function \fIfunc\fR is given a sub-range of the qarray to iterate over. The
\fIarg\fR argument passed to the \fIfunc\fR function is the same argument as is
passed to the \fBqarray_iter_loop\fR argument.
.SH SEE ALSO
.BR qarray_create (3),
.BR qarray_destroy (3),
.BR qarray_shepof (3),
.BR qarray_elem (3)
