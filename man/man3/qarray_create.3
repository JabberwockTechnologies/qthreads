.TH qarray_create 3 "MAY 2009" libqthread "libqthread"
.SH NAME
\fBqarray_create\fR \- allocate a runtime distributed array
.SH SYNOPSIS
.B #include <qthread/qarray.h>

.I qarray *
.br
\fBqarray_create\fR(const size_t \fIcount\fR,
const size_t \fIunit_size\fR);
.PP
.I qarray *
.br
\fBqarray_create_tight\fR(const size_t \fIcount\fR,
const size_t \fIunit_size\fR);
.PP
.I qarray *
.br
\fBqarray_create_configured\fR(const size_t \fIcount\fR,
const size_t \fIunit_size\fR,
.ti +25
const distribution_t \fId\fR,
const char \fItight\fR,
.ti +25
const int \fIseg_pages\fR);
.SH DESCRIPTION
These functions initialize qarray distributed array objects. All three
functions create an array containing at least \fIcount\fR elements that are at
least \fIunit_size\fR bytes long each. The \fBqarray_create\fR function may
round the element size up to the next-largest multiple of eight, but the
\fBqarray_create_tight\fR is guaranteed not to do that, so that elements are
packed tightly in the array. The \fBqarray_create_configured\fR function
provides greater control over the array implementation, allowing the
distribution pattern (\fId\fR), and the length of the distributed array
segments (\fIseg_pages\fR) to be specified. The \fIseg_pages\fR argument
specifies the number of memory pages in a single segment; memory cannot be
distributed in units smaller than a single page. If \fIseg_pages\fR is zero, a
default value is chosen.
.PP
The possible values for \fId\fR are:
.TP 4
FIXED_HASH
Distributes the memory across the available shepherds evenly, using a basic
round-robin assignment mechanism based on the address of the initial page of
each segment. Array segments cannot be relocated.
.TP
ALL_LOCAL
Assigns the entire array to the local shepherd. Array segments cannot be
relocated.
.TP
ALL_RAND
Assigns the entire array to a random shepherd. Array segments cannot be
relocated.
.TP
ALL_LEAST
Assigns the entire array to the shepherd with the least qarray segments
currently assigned to it. Array segments cannot be relocated.
.TP
DIST_REG_STRIPES
Assigns array segments with a round-robin mechanism. Segment location is stored
in the segment, so segments can be relocated, but finding a segment requires
extra memory operations.
.TP
DIST_REG_FIELDS
Assigns array segments evenly across all shepherds, attempting to maintain long
contiguous sets of segments on each shepherd. Segment location is stored in the
segment, so segments can be relocated, but finding a segment requires extra
memory operations.
.TP
DIST_RAND
Assigns array segments randomly to shepherds. Segment location is stored in the
segment, so segments can be relocated, but finding a segment requires extra
memory operations.
.TP
DIST_LEAST
Assigns each array segment to whichever shepherd has the fewest array segments
assigned to it at creation time. Segment location is stored in the segment, so
segments can be relocated, but finding a segment requires extra memory
operations.
.SH SEE ALSO
.BR qarray_destroy (3),
.BR qarray_iter (3),
.BR qarray_shepof (3),
.BR qarray_elem (3)
